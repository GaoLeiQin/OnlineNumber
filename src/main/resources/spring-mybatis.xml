<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 注册druid数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.user}"/>
        <property name="password" value="${jdbc.password}"/>

        <!--属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat 日志用的filter:log4j 防御sql注入的filter:wall-->
        <property name="filters" value="stat" />

        <!--最大连接池数量-->
        <property name="maxActive" value="20" />
        <!--初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时-->
        <property name="initialSize" value="1" />
        <!--获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁-->
        <property name="maxWait" value="60000" />
        <!--最小连接池数量-->
        <property name="minIdle" value="1" />
        <!--有两个含义： 1) Destroy线程会检测连接的间隔时间，如果连接空闲时间 >= 配置时间则关闭物理连接 2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明-->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!--连接保持空闲而不被驱逐的最长时间-->
        <property name="minEvictableIdleTimeMillis" value="300000" />
        <!--建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。-->
        <property name="testWhileIdle" value="true" />
        <!--申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。-->
        <property name="testOnBorrow" value="false" />
        <!--归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能-->
        <property name="testOnReturn" value="false" />
        <!--是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。-->
        <property name="poolPreparedStatements" value="true" />
        <!--要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100-->
        <property name="maxOpenPreparedStatements" value="20" />
    </bean>

    <!-- 注册属性文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!-- 注册SqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="typeAliasesPackage" value="com.ledo.beans"/>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 生成Dao的代理对象 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 等待SqlSessionFactoryBean类实例化，而ref直接引用，DataSource可能还没有完成实例化 （自动注入） -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <property name="basePackage" value="com.ledo.dao"/>
    </bean>
</beans>

















